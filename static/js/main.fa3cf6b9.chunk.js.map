{"version":3,"sources":["components/feedback/section/SectionStyled.js","components/feedback/section/Section.js","components/feedback/feedbackOptions/FeedbackOptionsStyled.js","components/feedback/feedbackOptions/FeedbackOptions.js","components/feedback/notification/Notification.js","components/feedback/statistics/StatisticsStyled.js","components/feedback/statistics/Statistics.js","components/feedback/FeedbackStyled.js","components/feedback/Feedback.js","components/App.js","index.js"],"names":["SectionStyled","styled","div","Section","title","children","className","Buttons","FeedbackOptions","options","onHandleClick","Object","keys","map","item","onClick","type","name","toUpperCase","slice","Notification","message","StatisticsWrapper","Statistics","props","total","positiveFeedbackPercentage","FeedbackWrapper","Feedback","state","good","neutral","bad","e","key","target","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qeAEA,IAUeA,EAVOC,IAAOC,IAAV,KCWJC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAAC,EAAD,WACE,oBAAIC,UAAU,gBAAd,SAA+BF,IAC9BC,M,6gBCNP,IAqBeE,EArBCN,IAAOC,IAAV,KCoBEM,EAlBS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAClC,OACE,cAAC,EAAD,UACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAI,OAC5B,wBACER,UAAU,eACVS,QAASL,EACTM,KAAK,SACLC,KAAMH,EAJR,SAOGA,EAAK,GAAGI,cAAgBJ,EAAKK,MAAM,IAF/BL,SCNAM,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,K,6uBCFb,IAyCeC,EAzCWrB,IAAOC,IAAV,KCwBRqB,EAtBI,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,2BAClC,OACE,eAAC,EAAD,WACE,oBAAIpB,UAAU,uBAAd,SACGK,OAAOC,KAAKY,GAAOX,KAAI,SAAAC,GAAI,OAC1B,qBAAIR,UAAU,kBAAd,UACE,oBAAGA,UAAU,kBAAb,UACGQ,EAAK,GAAGI,cAAgBJ,EAAKK,MAAM,GADtC,OAGA,sBAAMb,UAAU,sBAAhB,SAAuCkB,EAAMV,OAJVA,QASzC,oBAAGR,UAAU,mBAAb,oBAAwCmB,OACxC,oBAAGnB,UAAU,wBAAb,gCACsBoB,IADtB,W,gSClBN,IAaeC,EAbS1B,IAAOC,IAAV,KCwDN0B,E,4MAjDbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPtB,cAAgB,SAAAuB,GACd,IAAMC,EAAMD,EAAEE,OAAOlB,KACrB,EAAKmB,UAAS,SAAAC,GAAI,sBAAQH,EAAMG,EAAKH,GAAO,O,EAG9CI,mBAAqB,WAAO,IAAD,EACM,EAAKT,MACpC,OAFyB,EACjBC,KADiB,EACXC,QADW,EACFC,K,EAIzBO,gCAAkC,WAAO,IAC/BT,EAAS,EAAKD,MAAdC,KACR,OAAOU,KAAKC,MAAOX,EAAO,EAAKQ,qBAAwB,MAAQ,G,uDAI/D,OACE,eAAC,EAAD,WACE,oBAAIhC,UAAU,iBAAd,sBAEA,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAASiC,KAAKb,MACdnB,cAAegC,KAAKhC,kBAIxB,cAAC,EAAD,CAASN,MAAM,aAAf,SACGsC,KAAKJ,qBACJ,cAAC,EAAD,CACEd,MAAOkB,KAAKb,MACZJ,MAAOiB,KAAKJ,mBACZZ,2BAA4BgB,KAAKH,kCAGnC,cAAC,EAAD,CAAclB,QAAQ,+B,GA1CXsB,aCARC,EAJH,WACV,OAAO,cAAC,EAAD,KCETC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fa3cf6b9.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst SectionStyled = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  .section_title {\n    margin-bottom: 15px;\n    color: #3f639c;\n    font-weight: 400;\n  }\n`;\nexport default SectionStyled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionStyled from './SectionStyled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      <h2 className=\"section_title\">{title}</h2>\n      {children}\n    </SectionStyled>\n  );\n};\n\nexport default Section;\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nconst Buttons = styled.div`\n  .feedback_btn {\n    padding: 10px 20px;\n\n    background-color: #aedbe0;\n    border: 1px solid #486b6f;\n    border-radius: 5px;\n\n    box-shadow: 0px 5px 10px 2px rgba(9, 1, 9, 0.2);\n  }\n  .feedback_btn:hover,\n  .feedback_btn:focus {\n    transform: scale(1.03);\n    border: 1px solid #906c83;\n    outline: none;\n    box-shadow: 0px 5px 10px 2px rgba(97, 27, 92, 0.2);\n  }\n  .feedback_btn:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Buttons from './FeedbackOptionsStyled';\n\nconst FeedbackOptions = ({ options, onHandleClick }) => {\n  return (\n    <Buttons>\n      {Object.keys(options).map(item => (\n        <button\n          className=\"feedback_btn\"\n          onClick={onHandleClick}\n          type=\"button\"\n          name={item}\n          key={item}\n        >\n          {item[0].toUpperCase() + item.slice(1)}\n        </button>\n      ))}\n    </Buttons>\n  );\n};\n\nexport default FeedbackOptions;\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onHandleClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst StatisticsWrapper = styled.div`\n  .statistics_list {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 30px;\n    font-size: 22px;\n    font-weight: 700;\n  }\n  .statistics_item {\n    display: flex;\n    color: grey;\n\n    &:nth-child(1) {\n      color: #28a18b;\n    }\n    :nth-child(3) {\n      color: #f58376;\n    }\n  }\n\n  .statistics_text {\n    margin-right: 5px;\n  }\n  .statistics_quantity {\n    font-style: italic;\n    color: #3563ea;\n  }\n\n  .statistics_total {\n    margin-bottom: 10px;\n    font-size: 24px;\n    font-weight: 700;\n    color: #77586c;\n  }\n\n  .statistics_percentage {\n    font-size: 24px;\n    font-weight: 700;\n    color: #77586c;\n  }\n`;\nexport default StatisticsWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatisticsWrapper from './StatisticsStyled';\n\nconst Statistics = ({ props, total, positiveFeedbackPercentage }) => {\n  return (\n    <StatisticsWrapper>\n      <ul className=\"statistics_list list\">\n        {Object.keys(props).map(item => (\n          <li className=\"statistics_item\" key={item}>\n            <p className=\"statistics_text\">\n              {item[0].toUpperCase() + item.slice(1)}:\n            </p>\n            <span className=\"statistics_quantity\">{props[item]}</span>\n          </li>\n        ))}\n      </ul>\n\n      <p className=\"statistics_total\">Total: {total()}</p>\n      <p className=\"statistics_percentage\">\n        Positive feedback: {positiveFeedbackPercentage()}%\n      </p>\n    </StatisticsWrapper>\n  );\n};\n\nexport default Statistics;\nStatistics.propTypes = {\n  props: PropTypes.object.isRequired,\n  total: PropTypes.func.isRequired,\n  positiveFeedbackPercentage: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nconst FeedbackWrapper = styled.div`\n  margin: 0 auto;\n  padding: 10px 20px 10px;\n  max-width: 400px;\n  border: 1px solid grey;\n  border-radius: 10px;\n  text-align: center;\n\n  .feedback_title {\n    margin-bottom: 15px;\n    color: #486b6f;\n  }\n`;\nexport default FeedbackWrapper;\n","import React, { Component } from 'react';\nimport Section from './section/Section';\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\nimport Notification from './notification/Notification';\nimport Statistics from './statistics/Statistics';\nimport FeedbackWrapper from './FeedbackStyled';\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onHandleClick = e => {\n    const key = e.target.name;\n    this.setState(prev => ({ [key]: prev[key] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.countTotalFeedback()) * 100) || 0;\n  };\n\n  render() {\n    return (\n      <FeedbackWrapper>\n        <h1 className=\"feedback_title\">Feedback</h1>\n\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onHandleClick={this.onHandleClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              props={this.state}\n              total={this.countTotalFeedback}\n              positiveFeedbackPercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </FeedbackWrapper>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport Feedback from './feedback/Feedback';\n\nconst App = () => {\n  return <Feedback />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}